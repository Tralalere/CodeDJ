importScripts("./ext_libs/require.js")
!function(e){"use strict";function t(e,t){function a(){if(m.length>0){var e=m[0];e.emitSync.apply(null,e.arguments),m.shift(),a()}}function u(){for(var e=d.blockedNameSpaces[p]||[],t=c.call(arguments),n=t.shift(),o=d.listenersFor[n]||[],i=0;i<o.length;i++)if(-1===e.indexOf(o[i].nameSpace))try{o[i].callback.apply(d,t)}catch(e){r(n,e,o[i].origin)}}t=t||{};var l=t.parent,p=t.nameSpace,d=l||e;l||(n(e),e.listenersFor={},e.emitQueue=[]),e.on=function(e,t){d.listenersFor[e]||(d.listenersFor[e]=[]);var n={origin:s(),nameSpace:p,callback:t};return d.listenersFor[e].push(n),n},e.removeListener=function(e,t){var n=d.listenersFor[e];if(n){var s;s="function"==typeof t?i(n,t):o(n,t),s>=0&&n.splice(s,1)}},e.removeAllListenersFor=function(e){d.listenersFor[e]&&(d.listenersFor[e]=[])},e.removeAllListeners=function(){d.listenersFor={}};var m=d.emitQueue;e.emit=function(){m.push({emitSync:u,arguments:arguments}),m.length<=1&&a()},e.emitSync=function(){console.warn("Please try to avoid calling emitSync. Here for event '"+arguments[0]+"'"),u.apply(null,arguments)},e.emitter=function(t,n){n=n||{};var o=n.sync?e.emitSync:e.emit;return function(){var e=c.call(arguments);if(n.filter)for(var i=0;i<e.length;i++)e[i]=n.filter(e[i]);e.unshift(t),o.apply(null,e)}}}function n(e){var n={};e.blockedNameSpaces={},e.block=function(t){e.blockedNameSpaces[t.from]=e.blockedNameSpaces[t.from]||[],e.blockedNameSpaces[t.from].push(t.to)},e.twoWayBlock=function(t,n){e.block({from:t,to:n}),e.block({from:n,to:t})},e.createOrFindEventNameSpace=function(o){return n[o]||(n[o]={},t(n[o],{parent:e,nameSpace:o})),n[o]}}function o(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return n;return-1}function i(e,t){for(var n=0;n<e.length;n++)if(e[n].callback===t)return n;return-1}function s(){var e=new Error("fake error");return e.stack?e.stack.split("\n")[3]:void 0}function r(e,t,n){throw a(e,n),u(t),t}function a(e,t){var n="Error was on event '"+e+"'";t&&(n+=". Listener for '"+e+"' was attached\n"+t),console.warn(n)}function u(e){if(e.stack){for(var t=e.stack.split("\n"),n="",o=2;o<t.length;o++)n+="\n"+t[o];console.warn("Error occured "+n)}}var c=Array.prototype.slice;"undefined"!=typeof define?define("toxilibs/event_capabilities_queued",[],function(){return t}):"undefined"!=typeof module&&module.exports?module.exports=t:e.addEventCapabilities=t}("undefined"==typeof exports?this:exports),define("toxilibs/event_bus_queued",["./event_capabilities_queued"],function(e){function t(e){return t.createOrFindEventNameSpace(e)}return e(t),t}),define("coding_world/core/sample",[],function(){function e(e){this.instrument=e.instrument,this.soundName=e.soundName,this.soundSource=e.soundSource,this.ownVolume=void 0===e.volume?1:e.volume,this.eventBus=e.eventBus,this.eventBus.emit("sample created",e)}return e.prototype.volume=function(){return this.instrument.volume*this.ownVolume},e.prototype.play=function(e,t){this.eventBus.emit("play note requested",{note:e,volume:e.volume*this.volume(),delay:t})},e.prototype.export=function(){return{soundName:this.soundName}},e}),define("coding_world/core/instrument",["./sample"],function(e){function t(t){function i(e,t){this.samples={},e&&(this.addSample(e),this.mainSample=this[e],r(this),s(this)),t=t||{},this.volume=void 0===t.volume?1:t.volume}function s(e){for(var t=0;t<n.length;t++){var o=n[t];e[o]=function(){e.mainSample[o].apply(e.mainSample,arguments)}}}function r(e){for(var t=0;t<o.length;t++){var n=o[t];e[n]=e.mainSample[n]}}return i.prototype.addSample=function(n,o){var i=new e({instrument:this,soundName:n,soundSource:o||n,eventBus:t});this.samples[n]=i,this[n]=i},i}var n=["play"],o=["soundName","sound"];return t}),define("coding_world/core/note",[],function(){function e(e){e=e||{},this.pattern=e.pattern,this.sample=e.sample,this.soundName=e.soundName||this.sample.soundName,this.start=e.start||1,this.transpose=e.transpose||0,this.volume=void 0===e.volume?1:e.volume,this.duration=void 0===e.duration?1:e.duration}return e.prototype.soundSource=function(){return this.sample.soundSource||this.sample.soundName},e.prototype.play=function(e){this.sample.play(this,e)},e.prototype.isSimilarTo=function(e){return e.soundName===this.soundName&&e.start===this.start&&e.volume===this.volume&&e.transpose===this.transpose},e.prototype.export=function(){return{pattern:this.pattern.export(),soundName:this.soundName,start:this.start,volume:this.volume,transpose:this.transpose,isCorrect:this.isCorrect,isSolutionNote:this.isSolutionNote}},e}),define("coding_world/core/user_to_core",[],function(){return{tempo:130}}),define("coding_world/core/pattern",["./note","./user_to_core"],function(e,t){function n(n){function o(e){this.id=s++,e=e||{},this.mesuresCount=e.mesuresCount||4,this.beatsPerMesure=e.beatsPerMesure||4,this.notes=[],this.beatDuration=6e4/t.tempo,this.loop=void 0===e.loop||e.loop,this.loopLimit=e.loopLimit,this.loopTimes=0;var o=this;n.on("reset",function(){o.stop(),s=0}),n.emit("new pattern",this)}function i(e,t,n){for(var o=0;o<e.length;o++){var i=e[o],s=i.start-Math.floor(i.start),r=1e3-n*s;i.play(r+t)}}var s=0;return o.prototype.addSound=function(t,o,i){if(i=i||{},!(Math.floor(o)>this.totalBeats())){var s=new e({pattern:this,sample:t,soundName:i.soundName,start:o,volume:i.volume,transpose:i.transpose,duration:i.duration});this.notes.push(s),n.emit("note added",s)}},o.prototype.play=function(){this.beatDuration=6e4/t.tempo,this.playBeat(1)},o.prototype.stop=function(){clearTimeout(this.playTimer)},o.prototype.playBeat=function(e,o){this.beatDuration=6e4/t.tempo,o=o||0,1===e&&(this.startTime=Date.now()),n.emit("pattern beat played",e),i(this.notesAtTime(e),o,this.beatDuration);var s=this.startTime+e*this.beatDuration,r=this;if(this.loop||!(e>=this.totalBeats())){var a=e%this.totalBeats()+1;this.playTimer=setTimeout(function(){if(e>=r.totalBeats()&&(n.emit("samples loop stop requested",{samples:!0}),n.emit("reset"),r.loopLimit&&++r.loopTimes>=r.loopLimit))return void n.emit("pattern has reached loop limit");r.playBeat(a,Date.now()-s)},s-Date.now())}},o.prototype.totalBeats=function(){return this.mesuresCount*this.beatsPerMesure},o.prototype.duration=function(){return this.mesuresCount*this.beatsPerMesure*this.beatDuration},o.prototype.notesAtTime=function(e){for(var t=[],n=0;n<this.notes.length;n++){var o=this.notes[n];Math.floor(o.start)===e&&t.push(o)}return t},o.prototype.export=function(){return{id:this.id,totalBeats:this.totalBeats()}},o}return n}),define("coding_world/core/tune",[],function(){function e(e){function t(t){t=t||{},this.patterns=t.patterns||[],this.loop=void 0===t.loop||t.loop;var n=this;e.on("reset",function(){n.stop()}),e.emit("new tune",this)}return t.prototype.add=function(){for(var e in arguments)this.patterns.push(arguments[e])},t.prototype.play=function(){this.playPattern(0)},t.prototype.playPattern=function(e){var t=this.patterns[e],n=this;if(t.play(),this.loop||!(e+1>=this.patterns.length)){var o=(e+1)%this.patterns.length;this.playTimer=setTimeout(function(){n.playPattern(o)},t.duration())}},t.prototype.stop=function(){clearTimeout(this.playTimer)},t}return e}),define("coding_world/core/timeline_tab",[],function(){function e(e){function n(n){if(this.name=n,t[this.name]){var o=t[this.name];this.timelines=o.timelines,this.instruments=o.instruments,e.emit("tab copied",{old:o,new:this})}else this.timelines={},this.instruments={};e.emit("new tab",this),t[this.name]=this}function o(e){e.view=$('<div class="timeline-tab"></div>'),e.view.text(e.name)}function i(t){t.view.on("click",function(){t.active||(s(),t.setActive(!0),e.emit("timeline tab changed",t))})}function s(){for(var e in t){t[e].setActive(!1)}}return n.prototype.init=function(){o(this),i(this),0===Object.keys(t).length&&(this.view.addClass("default"),this.view.addClass("classTab")),s(),this.setActive(!0)},n.prototype.setActive=function(e){this.view.toggleClass("active",e);for(var t in this.timelines){var n=this.timelines[t];e?n.show():n.hide()}this.active=e},n.prototype.add=function(t){if(t.soundName)e.emit("add instrument to tab",{tabName:this.name,soundName:t.soundName});else for(var n in t.samples)e.emit("add instrument to tab",{tabName:this.name,soundName:n})},n.prototype.addTimeline=function(e){this.timelines[e.sampleName]=e,this.active||e.hide()},e.on("tab switch requested",function(e){var n=t[e];n&&(s(),n.setActive(!0))}),n}var t={};return e}),define("coding_world/core/world_main",["toxilibs/event_bus_queued","./instrument","./pattern","./tune","./timeline_tab"],function(e,t,n,o,i){function s(s,r){var a=e(s);this.name=s,this.api={Tune:o(a),Instrument:t(a),Pattern:n(a),Tab:i(a),eventBus:a},this.eventBus=a,this.code=r,a.emit("world ready",this)}return s.prototype.startCode=function(){return this.code.start},s.prototype.exposedCode=function(){var e=this.code.exposed;return"object"==typeof e?e.join("\n"):e},s.prototype.endCode=function(){return this.code.end},s}),define("toxilibs/execute",[],function(){function e(e){return t({source:e.source,scope:e.scope,alias:e.alias||{}}).call(e.thisValue,e.scope)}function t(e){return Function(o,n(e.scope,e.alias)+e.source)}function n(e,t){e=e||{};var n="";for(var i in e)for(var s=[i].concat(t[i]),r=0;r<s.length;r++)n+="var "+s[r]+" = "+o+"."+i+"\n";return n}var o="__scope__";return e}),define("coding_world/user_code/user_code",["toxilibs/event_bus_queued","toxilibs/execute","coding_world/core/user_to_core"],function(e,t,n){function o(e){try{var n=i();e=n.declaration.concat(s.startCode(),e,n.assignation,s.endCode()).join("\n"),t({source:e,scope:s.api}),s.eventBus.emit("user to core values updated",s.api.userToCoreKeys),s.eventBus.emit("code executed")}catch(e){console.error(e)}}function i(){var e=[],t=[];for(var o in n){var i="userToCoreKeys."+o;e.push("var "+o+" = "+i),t.push(i+" = "+o)}return{declaration:e,assignation:t}}var s;e.on("world ready",function(e){s=e,s.api.userToCoreKeys=n,o(e.exposedCode())}),e.on("code execution requested",o)}),define("coding_world/goal/comparer",["toxilibs/event_bus_queued"],function(e){function t(){var e=0,t=[];for(var i in a){var s=a[i],c=u[i];e+=n(s,c,t),e+=o(c,t)}r.emit("ready to display notes",t),r.emit("patterns compared",e)}function n(e,t,n){for(var o=0,s=0;s<e.notes.length;s++){var r=e.notes[s],a=i(r,t);a?(a.isCorrect=!0,n.push(a)):(o++,r.isSolutionNote=!0,n.push(r))}return o}function o(e,t){for(var n=0,o=0;o<e.notes.length;o++){var i=e.notes[o];i.isCorrect||(n++,t.push(i))}return n}function i(e,t){for(var n=t.notes,o=0;o<n.length;o++){var i=n[o];if(i.isSimilarTo(e))return i}return!1}var s=e("solutionWorld"),r=e("userWorld"),a={},u={};s.on("new pattern",function(e){a[e.id]=e}),r.on("new pattern",function(e){u[e.id]=e}),r.on("code executed",t)}),require.config({urlArgs:"undefined"!=typeof window&&"localhost"===window.location.hostname?"bust="+Date.now():"",paths:{toxilibs:"../toxilibs"}}),require(["toxilibs/event_bus_queued","coding_world/core/world_main","coding_world/user_code/user_code","coding_world/goal/comparer"],function(e,t){addEventListener("message",function(t){if("eventName"in t.data){var n=[];n=n.concat(t.data.eventName),n=n.concat(t.data.args),e.emit.apply(e,n)}}),e.twoWayBlock("solutionWorld","userWorld"),e.twoWayBlock("solutionWorld","sandbox");var n=e("sandbox");e.on("world creation requested",function(e,n){new t(e,n)}),e.on("world ready",function(e){postMessage({eventName:e.name+" code ready",args:[e.exposedCode()]})}),n.on("new pattern",function(e){postMessage({eventName:"new pattern",args:[e.export()]})}),n.on("play note requested",function(e){postMessage({eventName:"play note requested",args:[{note:e.note.export(),volume:e.volume,delay:e.delay}]})}),n.on("ready to display notes",function(e){var t=e.map(function(e){return e.export()});postMessage({eventName:"ready to display notes",args:[t]})}),n.on("pattern beat played",function(e){postMessage({eventName:"pattern beat played",args:[e]})}),n.on("samples loop stop requested",function(e){n.emit("loop stop requested",e),postMessage({eventName:"samples loop stop requested",args:[e]})}),n.on("pattern has reached loop limit",function(){postMessage({eventName:"pattern has reached loop limit",args:[]})}),n.on("patterns compared",function(e){postMessage({eventName:"patterns compared",args:[e]})}),n.on("new tab",function(e){postMessage({eventName:"tab creation requested",args:[e.name]})}),n.on("add instrument to tab",function(e){postMessage({eventName:"add instrument to tab",args:[{soundName:e.soundName,tabName:e.tabName}]})}),n.on("user to core values updated",function(e){postMessage({eventName:"user to core values updated",args:[e]})}),n.on("sample created",function(e){postMessage({eventName:"sample created",args:[{soundName:e.soundName,soundSource:e.soundSource}]})})}),define("sandbox_worker",function(){});